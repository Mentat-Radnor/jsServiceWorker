---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Films from '../components/Films.astro';

const films = await fetch('https://swapi.dev/api/films').then(response => response.json());
---

<script>
	let count = 0;

	const button = document.querySelector('.btn');
	const counter = button?.querySelector('span');
	const increaseNumber = () => {
		count += 1;
		if (counter) {
			counter.textContent = count.toString();
			console.log(counter);
		}
	}

	button?.addEventListener('click', increaseNumber)


const films = await fetch('https://swapi.dev/api/films/1/').then(response => response.data);
</script>

<Layout title="Welcome to Astro.">
	<main>
		<Films films={films.results} />
		<button class="btn">
			Click 
			<span>
				0
			</span>
		</button>
		<div>
			<h1>Photos</h1>
			<img
				class="img"
				src="/img/1.jpg"
				alt="Space"
			/>
			<img
				class="img"
				src="/img/2.jpg"
				alt="Space"
			/>
			<img
				class="img"
				src="/img/3.jpg"
				alt="Space"
			/>
			<img 
				class="img"
				src="/img/4.jpg"
				alt="Space"
			/>
			<img src="https://s3.stroi-news.ru/img/yarkie-kartinki-na-zastavku-1.jpg" alt="photo">
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}

	.img {
		width: 300px;
		height: 300px;
		object-fit: contain;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
